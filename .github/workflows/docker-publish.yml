name: Build, Push and Deploy

on:
  push:
    branches:
      - main  

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/spoutbreeze-backend

    outputs:
      image-tag: ${{ env.TAG }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create certificate file
        run: |
          mkdir -p certs
          echo "${{ secrets.KEYCLOAK_CERT }}" > certs/keycloak.pem

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Git commit short SHA and date
        id: vars
        run: echo "TAG=$(date +%Y%m%d)-${GITHUB_SHA::7}" >> "$GITHUB_ENV"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.TAG }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      
      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config
      
      - name: Test cluster connection
        run: |
          kubectl cluster-info
          kubectl get nodes
      
      - name: Update deployment image
        run: |
          kubectl set image deployment/spoutbreeze-backend \
            fastapi-backend=${{ secrets.DOCKERHUB_USERNAME }}/spoutbreeze-backend:${{ needs.build-and-push.outputs.image-tag }} \
            -n spoutbreeze
      
      - name: Wait for rollout to complete
        run: |
          kubectl rollout status deployment/spoutbreeze-backend -n spoutbreeze --timeout=300s
      
      - name: Verify deployment
        run: |
          kubectl get pods -n spoutbreeze -l app=spoutbreeze-backend
